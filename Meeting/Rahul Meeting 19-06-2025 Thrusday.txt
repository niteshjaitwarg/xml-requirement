IN-HYD-10N-H06
12:08
This one, I'll show you this one 1st. So we thought like till now we are going to get this get like this XML template, ok? Based on that, we started working on this XML complex one, ok?

Hidau, Rahul
12:21
Yes sir.

IN-HYD-10N-H06
12:26
So we thought like we'll get XML template like this and based on the using using this, we have to process the data now. So for this so now the thing here is we need to generate this JSON structure from the access team.

IN-HYD-10N-H06
12:44
That is our main motive. So means whenever is there any like there is a e.g. this is a contact between the producer and consumer. Okay. Producer any web service technology, that's the resource web service technology. So web services will.

IN-HYD-10N-H06
13:08
So Json will have open a like open API kind of thing like swagger, whereas XML will have access this, ok? So that is a contract, what data we need to send. So what is the file name field names? What is the structure of those field names? Okay, same way for the for us they'll give you access simple.

Hidau, Rahul
13:32
Okay.

IN-HYD-10N-H06
13:33
So the access to would be how it will be like yeah this is accessing I'll share you this file ok.

Hidau, Rahul
14:03
Okay.

IN-HYD-10N-H06
14:05
Assume this is a sample access thing e.g. for XML, ok? This one is automated thing, ok? So if you have anything right make a note of points, ok? So this is much bigger, ok? So it is having different, different component.

IN-HYD-10N-H06
14:23
Next. E.g., if you're doing this, e.g., this is the start element, work effective stack is the start element for the XML. Yeah.

Hidau, Rahul
14:40
See what's the.

IN-HYD-10N-H06
14:42
Okay, so there is so in the sequence what you are going to see is summary summary of these fields. So this is a summary of these Fields summary of these fields, ok? So similarly after summary what we have we have worker type.

Hidau, Rahul
15:06
So.

IN-HYD-10N-H06
15:14
Yeah, worker type name is worker. So it is created a tag with worker. So like that in this worker type, this is the worker type object, it again it will have summary and effective changes. This is these two sections we have, right? So worker summary, again effect.

Hidau, Rahul
15:31
To change that before like.

IN-HYD-10N-H06
15:34
It's a complex stuff and it is going to like a end times next time like list objectives. We can get any number of effective changes.

Hidau, Rahul
15:46
Okay. Could you please could you please come again and.

IN-HYD-10N-H06
15:53
List.

IN-HYD-10N-H06
15:55
Given from list list object. See mean and max is one means it's a simple object, if it is unloaded means list object basically. If I say worker summary, e.g., this is the one, so they didn't mention max access means by default it will have only one.

IN-HYD-10N-H06
16:15
One sections. Like this work list like summary picky summary, whereas, these effective changes, right? If you see effective changes, sequence zero they mentioned sequence they mentioned, like that we will get n sequences. So for this particular worker ok understo.

Hidau, Rahul
16:36
This is.

IN-HYD-10N-H06
16:38
Yeah. So this is the employee ID, this is 2nd worker employee. So what are the changes it is having, ok change means. So firstly our primary thing is we need to, e.g., in UA you will have upload script.

IN-HYD-10N-H06
16:55
Okay, so from there they'll push the to us. So we have to analyze the ok we have to again we'll reply back to the UA. So I'll explain I'll explain the flow now. So in the UA, how it will be.

IN-HYD-10N-H06
17:14
You need to display a structure, these structure of those objects. These structure of objects means, e.g., let's take example of this one, ok? So what it would be 1st is the change, right? So how it will be in the UA?

IN-HYD-10N-H06
17:31
So e.g., this is a start element. Here they'll have like one checkbox and expandable thing. One checkbox means I'll show it in the diagram manner, ok.

IN-HYD-10N-H06
17:47
Okay.

Hidau, Rahul
17:53
Okay.

IN-HYD-10N-H06
17:59
Yeah, this is the example you see, ok? You're seeing right this one.

Hidau, Rahul
18:05
Yeah, yeah.

IN-HYD-10N-H06
18:13
So you're seeing this one, right? See node zero like node zero of 110 like assume this node zero is our this one workers. So either we'll have like here we have this check option along with the expandable option like this it is going to represent. So either they can select all, they can they might set whatever objects they want, ok? So from like this diagram, based on this diagram.

IN-HYD-10N-H06
18:40
So workers so what we will do, we'll 1st process all access the we'll understand the we will give this three structures to them. UA, so from UA or whatever, they will display.

IN-HYD-10N-H06
18:55
So once after display, what is the job from user will select what other because this XSD does not require all elements like for the two process for us. Selection they'll do it like user will do it manually. So because this access is having around say 3000 lines of like it is having more than like kind of thing, like it's a very big big access thing. I'll see if i if I will minimizing all those things.

Hidau, Rahul
19:25
Right? Yes.

IN-HYD-10N-H06
19:32
Yeah. So by understanding this we need to generate this node status, ok? So once node generated UA will like will from UA user will select this whatever node he requests.

IN-HYD-10N-H06
19:48
Okay, so what are the object? If they don't want e.g. this node two zero of node two, they'll unselect it. So like this whatever selection they're doing, so same way once after these changes are done, so they will send back to the updated next year success.

Hidau, Rahul
20:05
Okay.

IN-HYD-10N-H06
20:07
Next they'll do do next. Okay, so once after we are getting finalized like object structures like so we need to generate now this, this one like this one this sample json structure is.

Hidau, Rahul
20:23
Get ready?

IN-HYD-10N-H06
20:25
Yes, so this one we need to generate from programmatically. No, before that, 1st we'll insert object like column relations in DB. We'll get UIDs of all column relations. After that we'll, we'll use, we'll create this template and.

IN-HYD-10N-H06
20:43
We'll save like we'll save in email, We'll let UA, it depends upon the selected notes, right? So it depends on selected notes basically this has to be generated, ok?

Hidau, Rahul
20:54
Okay so.

IN-HYD-10N-H06
20:59
So once this XML is generated, XML is generated like this is generated. So what will happen in UI automatically like.

IN-HYD-10N-H06
21:09
They're going to populate this XML structure is right there right this one this XML structures. Let me open the XML.

IN-HYD-10N-H06
21:24
Okay. So this is the structure, right? See, this is the output structure, but same way they're going to generate the input structure, like input structure here is red.

IN-HYD-10N-H06
21:43
So for the text files how we are doing, same way they're going to create a structure in this area, like how we are doing right? Any here we are getting right?

IN-HYD-10N-H06
22:02
So this is the one and one more thing here is one more like this is a plain post two scenario. Like user will come, user will upload access D. So We'll those elements from the access D.

IN-HYD-10N-H06
22:16
And we'll create an extra structure like this structure this structure, so once user will select whatever notes he required for this from the structures, ok? And they'll do next. So once doing next, we are going to generate this XML Json and we'll we are going to generate column relations because we need to have.

Hidau, Rahul
22:38
This is required, right? For which.

IN-HYD-10N-H06
22:40
Yeah. So we will generate these UIDs, we'll insert it, we'll 1st we'll generate column regions, we'll it in DB. Once we got this UIDs, we'll map the two IDs with this structure and we'll save it to the DB. Okay, what are the tables I'll tell you, ok? But this is a high level understanding of the requirement, ok? So step two. Step one is completed like once after configuration generated, you will display.

Hidau, Rahul
23:08
Whatever output files. Yeah yeah so could you please repeat one of the step one in the sort manner?

IN-HYD-10N-H06
23:20
Step one means user will come to UA, ok? Okay. So in the UI, e.g., if currently what we are doing, how we are importing anything, we are doing add new files, right? And here we are.

IN-HYD-10N-H06
23:35
Here now we'll give XML. Once we give XML, we'll have some upload option here. Okay ok maybe this pop up will be some more than this one. Once user has uploaded XSD, so we have to provide one API to API. So they.

IN-HYD-10N-H06
23:57
So we have to understand that processes the create these next structures here, ok? Once this next we will display the same structures in UI, means we need to generate this structure. We will reply back to them. Okay, understoo.

Hidau, Rahul
24:16
Today so.

IN-HYD-10N-H06
24:19
Like this so and here from here user will select whatever notes he want. So if they don't want this zero two.

Hidau, Rahul
24:30
So it will be unchecked.

IN-HYD-10N-H06
24:32
Uncheck this one, they'll check yeah they'll check and uncheck basically. Yeah. Okay, that is the thing once node, so what people will do is they'll share this node with us like whatever the updated note, right? They'll give it with us they'll send the request as the next next navigation, e.g..

IN-HYD-10N-H06
24:54
Upload file next day three, next Select the notes. Select the notes next, so on we'll get the notes. So once after getting the notes, we need to create a column relation objects, list of column relation, we'll need to save it in the DB, ok? So once you save it in DB, we'll get UIDs.

IN-HYD-10N-H06
25:13
Okay, so once we get the UIDs, so we need to generate this JSON structures for the XML. So from here we have already started working on this code.

Hidau, Rahul
25:22
Good ok.

IN-HYD-10N-H06
25:25
Okay, so till now till now you worked on like a runtime data thing. Now we need, we need to work on configuration data thing. See what is the configuration you have to build. So, so whatever code you have written dollar that doesn't like went away in a waste manner, like it is going to use.

Hidau, Rahul
25:42
Definitely. Okay, understood, right? So he selected that will be mapping to.

IN-HYD-10N-H06
25:49
With the validations transformation see whatever is everything is independent component more than that. So don't rely on the configurations. Yeah, but that should be everything will control with configurations, that's it.

IN-HYD-10N-H06
26:08
So that's why if we are able to create data set means rest part will taken care by the rest of things. So validation rules understands only data sets. Transformation rules understands only data sets. Output file rules understands only data sets. Data set depends upon this. Data sets we are creating on this configuration requirement so.

IN-HYD-10N-H06
26:29
It's like a independent box. You wanted to remove one box, you can remove it. You wanted to add one more box, you can add it, like box manner. Like new trend came, right? There is a mobile with the attached to the box. No, NO. New technology come.

IN-HYD-10N-H06
26:58
Models like this one, correct? Google has given this one.

IN-HYD-10N-H06
27:06
Yeah, ok. So this is the mobile technology, new technology which has introduced recently. So if you wanted to upgrade processor, you will just unplug this processor thing and you'll you'll plug high processor. If you want to update RAM, you will unplug that RAM block. You'll put put that new, you wanted to update hard disk, you will remove that block like everything if you see.

Hidau, Rahul
27:31
Here Wi Fi, all these modules.

IN-HYD-10N-H06
27:35
So everything is detachable everything like this. So this is a new trend like a new technology of mobile blocks things. So they have a base platform, anything with can be replaced like same same. We don't give other than that. So this is the access event.

IN-HYD-10N-H06
28:00
Step two is now step two is updates to the updates to the means e.g. for today's requirement they have only in a schema, they want only two sections or three sections Next maybe. Tomorrow, they want to add few more sections to the structure. Other they want to remove when there is going to uplift the update is happening on the.

IN-HYD-10N-H06
28:27
Input structures basically, ok? So again, what we'll do user will upload the JSON structures this not Json XSD, user will upload the access D again same same thing next we same code. We'll like process the XSD.

IN-HYD-10N-H06
28:47
So what will happen is while update scenarios, we'll display the table back to them which are selected and which are unselected. Because we have already existing configuration with us. Yes? So now what user will do, user can do.

IN-HYD-10N-H06
29:03
Either he can add few more sections, few more objects or he can delete few more objects. So what will happen, there is like changes happening in the structure like whatever processing structure. So what we have to do here is while taking the new structure, like updating scenario.

IN-HYD-10N-H06
29:20
Either we need to have a such bullety, whether is there any deletion has happening field deletion is happening or the field deletion. So user is uploaded the access day again, so we have displayed that what are the selected areas.

IN-HYD-10N-H06
29:38
So the he might add few more few more selected areas or he can remove a few selected areas from the existing configuration. So now what the scenario here is, so by understanding existing because update scenario, new things come. So two things are there now means existing structure.

IN-HYD-10N-H06
29:58
New structure. We need to identify differences. If there any deletion is happening at the column level or any structure level, we have to delete. Is there any addition is happening? We need to add. That is the one thing. Otherwise, if that is looks very complex, we'll remove all structures we'll need all structures.

IN-HYD-10N-H06
30:18
Okay, we'll recreate new structures but but problem here is how we are going to handle the validation and transformation rules. Because if you are going to delete all those structures, we are going to lose the transformation validations. That is the 1st trigger point. So you guys might ask like.

IN-HYD-10N-H06
30:35
We can we will simply delete and we'll like reinsert all those structures. But the point here is we are going to lose the validation and transformations of that particular particular column column, ok? So we need to have a such mechanism is mechanism. So we need to compare those existing and new updated structure. If there any any deletions are happening, we only delete those fields, ok? If any new things are coming, we'll add.

Hidau, Rahul
31:05
This one.

IN-HYD-10N-H06
31:11
I have done the process selections and all for ABCD, ABD. E.g., I have selected A and D have inserted ABC ABCD have ABCD I reverted back where I got a table I mean the notes example, so I selected A and D So I have done the.

IN-HYD-10N-H06
31:28
Process. So, e.g., I need to, I want to select again bnc. So the 60 which is 60 will be imported imported or see that that can we don't know because as as goes under there maybe chance of having few more fields added to the SSD.

IN-HYD-10N-H06
31:47
Okay, NO one will predict e.g. user requirement user requirement based on new features. E.g., this developing new features definitely they'll import that so as 2nd step, as you have mentioned.

IN-HYD-10N-H06
32:08
Adding and selecting of a new fields require new S 60. Editing of present fields will have the same will use the same 60. See, either they can use same access D ok they can use updated XSD. Okay both they can use. See existing you have ten sticks like ten complex objects. Out of ten.

IN-HYD-10N-H06
32:32
You have only three. Tomorrow, you got a requirement, add few more, two, ok? So what you're done again you uploaded the same access d. So after year, what will happen this access is updated with the new version 2.2, ok. So there are few more attributes, like few more additional complex structures. So again we'll import, what will happen? We'll compare both, whatever existing is that we'll check those things.

IN-HYD-10N-H06
32:58
Whatever not there, we'll display with the additional things. So user might select new things again they'll do. So what will happen means we need to have a mechanism to analyze with our existing new structure, ok. So based on that we will decide what what call in relations we have to insert or delete.

IN-HYD-10N-H06
33:16
So anyway for the deletion thing, simple, it's simple we have to update with the status delete, we have a column with the status. If you update the status as a delete, it will solve delete from from the process, ok? So that is one like a case we have like reusing So directly you can send list of columns for update.

IN-HYD-10N-H06
33:36
So once you start like delete AP you hit the once you hit the delete AP, so it will do also that is API is there already. Okay. So step one step two defense is this. This is a step one step two difference. Okay. Understood.

Hidau, Rahul
33:50
No problem.

IN-HYD-10N-H06
33:52
Yeah, yeah, yeah.

Hidau, Rahul
33:54
So challenging rate? Yeah, it's it's very challenging but I will go go through once the recording as well after then if I got any confusion so I will be connecting with.

IN-HYD-10N-H06
34:08
Okay this is the initial discussion right this see 1st thing we'll get.

IN-HYD-10N-H06
34:14
More I'll try to give enough time. Don't worry, forget about timelines, ok? Timelines is my problem ok? Don't worry about timelines and don't think that if I'm saying means you don't like don't do keep on dragging things, ok?

Hidau, Rahul
34:29
Okay.

IN-HYD-10N-H06
34:31
But.

Hidau, Rahul
34:33
Do you know, don't worry. Don't worry.

IN-HYD-10N-H06
34:37
Don't don't worry, don't worry. I know what is the complexity of the things. So based on that I'll give time you time for you guys. Even I'll keep buffer on even I know, I know the things. So, but like.

Hidau, Rahul
34:53
We both.

IN-HYD-10N-H06
34:59
If you guys are feeling hard like somewhere you are stucking, right? Immediately.

Hidau, Rahul
35:03
You can reach out to me. Okay.

IN-HYD-10N-H06
35:04
Okay 1st try to analyze from your end if still it is not able to figure out then because I nowadays said I'm busy with a lot of other things, ok? Not only other multiple things in my in my pocket, ok? So I have pulling you time for you guys is means very much difficult for me. So try to understand from my side also still I will be available for you guys, but understand from my side also.

IN-HYD-10N-H06
35:33
Because I take example of texting. So I try to give inputs for you guys, it's like ok not for one. So see you guys has developed one approach that is ok, but.

IN-HYD-10N-H06
35:49
That is not like, it has to be improved a lot. I believe like, so try to because we are not doing regular programming kind of thing before the interview also I told you guys same thing. So we are not going to do regular things. That's for sure. Then you have to prepare like that so.

IN-HYD-10N-H06
36:07
See, from here, you definitely you are going to learn new things and will go. That is the, that is the thing I can assure you. But while learning rate, make your hands dirty. Means Kitna significantly.

IN-HYD-10N-H06
36:23
So doing things like two ways. One is I see. That is my responsible because I had to deliver thing. So text me I see.

IN-HYD-10N-H06
36:49
Are you ok with your approach? So that's what we we need to have a discussions like when you are writing something, so better go with the review, if the approach looks good, we'll go with that like that. If you're not, if you're not we if you are not feeling.

IN-HYD-10N-H06
37:05
Good with that approach, then we'll, we'll come with some other solutions better.

Hidau, Rahul
37:11
Solutions, ok? Yeah, so that's the.

IN-HYD-10N-H06
37:13
Sure so XML.

Hidau, Rahul
37:16
That is fine, right?

IN-HYD-10N-H06
37:18
Yeah, XML one is fine now.

Hidau, Rahul
37:21
Once I will be going through the recording, then I will reach out to you. If I got any confusion, otherwise, I will be trying to understand from my.


Vandanasetti, Venkatesh
0:04
So otherwise that is let me let me share my screen too. Okay.

Boddu, Srikanth
0:17
Okay.

Vandanasetti, Venkatesh
0:19
So you guys were able to see my screen, right?

Hidau, Rahul
0:23
Yes yes, it's visible.

Vandanasetti, Venkatesh
0:26
So fine, ok. Now we are going to discuss new XML, right? XML feature.

Hidau, Rahul
0:30
Yes.

Vandanasetti, Venkatesh
0:32
So what is the step one we have is the step one will have access D access D will upload from UI.

Vandanasetti, Venkatesh
0:45
So to upload this UA, upload to access the from what we need to give capability we need to give provider API capability to upload a file.

Hidau, Rahul
0:56
Yes.

Vandanasetti, Venkatesh
0:57
Yes?

Hidau, Rahul
0:59
Yes perfect.

Vandanasetti, Venkatesh
1:00
So next point is upload once we have already upload the Sorry. Okay, next question is processed.

Vandanasetti, Venkatesh
1:17
Yes, so once you got like once we receive file from the APA receive file.

Hidau, Rahul
1:29
It's from the UI.

Vandanasetti, Venkatesh
1:31
From my. Okay from.

Boddu, Srikanth
1:39
You.

Vandanasetti, Venkatesh
1:40
Okay, it will be any place. So you need to process the SSD. Process the.

Hidau, Rahul
1:50
So what are the steps in the process of SSD?

Vandanasetti, Venkatesh
1:53
So extract all like a structure, field structures.

Hidau, Rahul
2:00
Yes.

Boddu, Srikanth
2:05
Okay.

Vandanasetti, Venkatesh
2:07
All the means like let us take example of this.

Boddu, Srikanth
2:16
Okay.

Vandanasetti, Venkatesh
2:22
So, so let's take example of this ok? So what will happen? This starts with the worker stack summary, worker stack.

Hidau, Rahul
2:34
Yeah, so how how it will be what'.

Vandanasetti, Venkatesh
2:38
Will open and close, so this would be the root element ok?

Hidau, Rahul
2:47
Okay, ok.

Vandanasetti, Venkatesh
2:50
So again it will open like this. So once after this one how we are going to give you like what is the response we are going to construct? So we got this. After that, what is the next element it is having? You need to understand like complex.

Vandanasetti, Venkatesh
3:10
Otherwise they can have like simple like access to understood the element. Element is having some like summary of like inline variables are a summary of referring object like one.

Vandanasetti, Venkatesh
3:31
This is referring object right? From here to here.

Hidau, Rahul
3:34
Yeah.

Vandanasetti, Venkatesh
3:36
As this part or how it is with me, the worker type is a reference of some other complex type. But whereas some this part summary part, the element is the complex this means they have defined here itself for that element. What what are the attributes for the summary? Understood?

Hidau, Rahul
3:53
Yeah, yeah, understood, understood.

Boddu, Srikanth
3:55
So next next element is our element is summary.

Vandanasetti, Venkatesh
4:01
So a summary how how how we are going to different summary here is like this, ok? Okay ok so like this we'll have summary attributes, like this one, right? Yes.

Hidau, Rahul
4:18
Application events.

Vandanasetti, Venkatesh
4:25
Ticket, so what we are going to do here is we are going to capture all those ok ok so then after this again, next is our our thinking is like this one, like next complex step is worker.

Vandanasetti, Venkatesh
4:51
So worker is type of worker type basically. 2nd element would be.

Hidau, Rahul
5:03
Why could I?

Vandanasetti, Venkatesh
5:06
No, we'll open again, we'll. Okay, we'll open. So again worker will have attribute set.

Hidau, Rahul
5:13
Yes yes. So this is the worker sum.

Vandanasetti, Venkatesh
5:16
Three worker type and this is the one this is a so again worker will have worker type like worker type is have will have that worker summary and effect to change. If I'll open workers worker here again I'll have sub attributes of worker summary Effect to change date, the effect to change this order changes we have.

Boddu, Srikanth
5:46
Okay.

Vandanasetti, Venkatesh
5:48
So this one, that's Understood right now.

Hidau, Rahul
5:50
Yeah mr.

Vandanasetti, Venkatesh
5:54
Okay.

Hidau, Rahul
5:55
Yeah, now it's it's continuing yeah now it's continuing as per our.

Vandanasetti, Venkatesh
6:03
So once you generate this one, if you if you reply back it is new way, so what will how you guys want to display is this is a root element they'll display. So inside that they'll display like the expandable chains.

Vandanasetti, Venkatesh
6:18
So whatever I show you that image rate.

Hidau, Rahul
6:22
Yes yes.

Vandanasetti, Venkatesh
6:25
Jason, what, what is the name of that Jason yesterday? I'll tell you.

Boddu, Srikanth
6:42
Okay.

Vandanasetti, Venkatesh
7:09
1 s let me.

Hidau, Rahul
7:14
And one more thing is like as per our previous discussion as well, so when we are generating the template after user selecting should be like templating indicate only.

Hidau, Rahul
7:31
The structure element or attribute name or the should it also pre populated pre populate any default value defined in the access d or the XML e.g. like in the last XML you were you have seen seeing the and the default value is the like that.

Vandanasetti, Venkatesh
7:53
We're not going to going with the default value say NO.

Vandanasetti, Venkatesh
7:58
Okay, because whatever data they are going to provide us, ok? So you're sayings enums. Hello?

Hidau, Rahul
8:08
Okay ok yeah yeah got it got it.

Vandanasetti, Venkatesh
8:12
So those things everything will give you we are going to capture in validation rules, ok? E.g., we have a constantly enum constant. It has to accept only three values, ABC assumption. So what we'll do in the validation rules will define that field either or BC. So then it is it is reflecting your enum, right?

Hidau, Rahul
8:34
Yes yes yes.

Vandanasetti, Venkatesh
8:36
So everything will consider this see if you are asking seriously, we might, what is the type of, we might mention that type of the data also yes?

Hidau, Rahul
8:46
Yeah.

Vandanasetti, Venkatesh
8:49
But NO need because while processing as input for us, we are assuming everything is a string, ok?

Hidau, Rahul
8:54
Okay.

Vandanasetti, Venkatesh
8:56
So that's why if while processing also, you NO need to rely on these types like what is the type of each element? E.g., if I open any simple types sorry.

Hidau, Rahul
9:14
Type yes yes. So you.

Vandanasetti, Venkatesh
9:17
You don't need to rely on this type because we are always considering everything as a string. When you say date also because date will have format, right? That format we are going to configure at validations level.

Hidau, Rahul
9:28
Okay.

Hidau, Rahul
9:32
Understood, right? Yeah, yeah, understood. And one more question is here like when.

Vandanasetti, Venkatesh
9:37
Okay.

Hidau, Rahul
9:38
Yeah, please.

Vandanasetti, Venkatesh
9:41
No, NO, i'm waiting for.

Hidau, Rahul
9:43
Yeah, so when displaying the XML structure in the preview ok so should attributes like keep going and employee IDs like if a parent selectable node like alongside the.

Vandanasetti, Venkatesh
10:01
Yes yes yeah it will be like e.g., your question like e.g. this is the element where it is having some attributes assumption. I'll show this example of where is that this one I'll try to open this one. Assumption there is NO type ah This one you are saying?

Vandanasetti, Venkatesh
10:31
No, they're not this one.

Boddu, Srikanth
10:40
Okay.

Vandanasetti, Venkatesh
10:43
Yeah.

Hidau, Rahul
10:48
Okay, Venky what we probably explained getting into some.

Vandanasetti, Venkatesh
10:54
I'll try to explain you that one. E.g., your access the access the e.g. this one is your employees, ok? So you your your question is while writing employee.

Hidau, Rahul
11:16
Okay.

Vandanasetti, Venkatesh
11:22
So if we have ID, employee ID, ok? Yeah as an attribute.

Hidau, Rahul
11:30
Yeah, so my question is when displaying displaying the XML structure in the preview, so should attribute like people and numeral employee ID appears in the selectable note alongside element or should be based on the differently? This is my question like NO NO NO.

Vandanasetti, Venkatesh
11:56
This is the employee ID, this is the name. It will represent as a attribute, right? Yeah.

Hidau, Rahul
12:05
You you can go, you can go in there yeah yeah so you can go in the question.TXP file just previous one, new one yeah question Yes. So here I have mentioned this example as well.

Vandanasetti, Venkatesh
12:20
Yeah. This one?

Hidau, Rahul
12:24
I.

Vandanasetti, Venkatesh
12:25
Question and questioning question.

Vandanasetti, Venkatesh
12:35
Okay fine. That's what employee attributes having let us take this one only. So employed, so you are saying number.

Hidau, Rahul
12:54
Yeah.

Vandanasetti, Venkatesh
12:59
This one right? Yeah yeah so e.g. this one, how we are going to return is because for us we will not consider the element. So simply we'll put this one like this tag is employee though inside this we will put as a simple variables.

Vandanasetti, Venkatesh
13:26
So they'll take this one. Otherwise they'll.

Hidau, Rahul
13:32
Okay ok.

Vandanasetti, Venkatesh
13:36
So you will have this one number because while processing rate we'll check whether element is having this any attributes or not. Yes, the attributes are there we will the attributes have been configured in our data studio or not. Not configurable, we don't pick, that's simple.

Hidau, Rahul
13:53
Okay, ok, got it.

Vandanasetti, Venkatesh
13:59
Hello.

Hidau, Rahul
13:59
Should try this, this is how it is going to be. Yeah, understood.

Vandanasetti, Venkatesh
14:05
Yeah that's it. So ok.

Boddu, Srikanth
14:19
Okay, if you have a child tag for a name.

Vandanasetti, Venkatesh
14:32
Yeah.

Boddu, Srikanth
14:34
I mean inside name if you have 1st name, last name, something tags like that.

Vandanasetti, Venkatesh
14:39
Yeah.

Boddu, Srikanth
14:41
This one here you're saying name, NO, not attributes, it's like how you wrote inside employees employee door, I'm saying inside name tag itself you have five.

Vandanasetti, Venkatesh
14:51
1st name, last name, something like that. Oh, that also it can be inside his name is, this would be like understood, this would be like F name 1st name or last name some.

Hidau, Rahul
15:04
Questionnaire.

Boddu, Srikanth
15:06
Sorry.

Vandanasetti, Venkatesh
15:07
Will also same or it will come inside.

Boddu, Srikanth
15:10
Open like this ok inside name you'll open the object and then keep the attributes again, ok.

Vandanasetti, Venkatesh
15:17
Will give the attributes. There will be one more scenario, e.g., I'll tell you here. So this is straightforward, ok? Here I have one more field some date, date not DT, ok.

Vandanasetti, Venkatesh
15:35
I'm representing this data as multiple dates, means how it would be joining date, ok? Like this. I can have like this also, right? XML.

Vandanasetti, Venkatesh
15:52
So this simple it's a simple type. It's not a simple type. Representing a simple type, but it is a complex type. So in such cases, these kind of things will not come the one anyway that I'm sure. But still if you wanted to process this one as a.

Vandanasetti, Venkatesh
16:08
Oh, this one, right? Like it has to be represent like this. So this DTF join. Similarly DTF.

Vandanasetti, Venkatesh
16:34
What if this DT DT itself is having value, it is the question here. E.g., it is having some rty, something is there, ok? So how we are going to capture this DT value?

Vandanasetti, Venkatesh
16:47
That is a.

Boddu, Srikanth
16:49
Basically for us.

Vandanasetti, Venkatesh
16:57
Yeah so so for these kind of things, e.g., assumption, either we can represent like this, otherwise this duty inside the duty whatever attributes we have right we can pushing it to this, this level joint kind of thing, ok? Like this also we can represent.

Boddu, Srikanth
17:20
Okay.

Vandanasetti, Venkatesh
17:24
Now simply DT will have this one the value whatever? That's it. So there might be chances of both cases, right, basically.

Vandanasetti, Venkatesh
17:42
Okay.

Hidau, Rahul
17:44
Okay.

Boddu, Srikanth
17:45
Okay, I mean that works if it is a simple object suppose if that is a.

Vandanasetti, Venkatesh
17:51
Okay name is fine inside these attributes. E.g., it is a compress which is definitely it is going to create inside this one. Similarly, this one for this one also if any of these have these kind of things, right?

Vandanasetti, Venkatesh
18:06
Why I'm suggesting here is this object then for such cases or we can bring some kind of dollar value kind of thing which represents this is next level, ok?

Vandanasetti, Venkatesh
18:21
So which which will hold the actual value of this DT. So some representation will bring here, NO issues, ok. So we are at 1st level, right? Basically, 1st level stays, right? So We'll bring like structure like this, NO issues.

Vandanasetti, Venkatesh
18:42
So, for, for timing park this as a side NO issues ok if DT comes we'll assume simply it's an ok? Okay Rahul, next question?

Hidau, Rahul
18:59
Second one this one? No, NO, second one is not I got 2nd one and the 3rd 3rd one is.

Vandanasetti, Venkatesh
19:09
So each selected node element or correct? For selected element like what should be the storage column relation table? Should it be typed yeah here in.

Vandanasetti, Venkatesh
19:34
Insico Inseco. See, we have, if I say in the column relations we have concept of source key. So the source key this one. So source key is fields will be this one.

Hidau, Rahul
19:51
Okay.

Vandanasetti, Venkatesh
19:55
So if I'm going with structure, this structure, e.g., if I open this one, this summary would be the source key, summary fields. Worker would be the source key, worker fields. Worker summary would be the source key, worker summary fields.

Hidau, Rahul
20:17
Okay, ok. Got it from where you got it.

Boddu, Srikanth
20:24
Example is it from XSD or XML from where you took that example or you wrote on your own? In that question you wrote something, right? That structure.

Hidau, Rahul
20:35
No, NO, when can you provided one of the XML in the.

Boddu, Srikanth
20:39
Yeah ok ok ok.

Vandanasetti, Venkatesh
20:48
So the creation of this one, right? Column relations rate.

Vandanasetti, Venkatesh
20:54
Will be next step of the, this one, once we get, We are given the structure to them, ok? So they'll select some fields and some structures and they'll send it to us. So once after the selection thing, right, we are going to create a, like next, like collaboration structures.

Hidau, Rahul
21:11
Okay, ok.

Vandanasetti, Venkatesh
21:15
Yeah, let's just focus on.

Hidau, Rahul
21:20
On this one, ok. Okay ok.

Vandanasetti, Venkatesh
21:24
Sub one sub two these two focus on these two. Once this is done, when we are replaying back to API rate this API replaying replying red we are replaying rate. So then we'll discuss how to how we are going to create a collaborations. Why? Because while creating collaborations I need to like.

Vandanasetti, Venkatesh
21:39
Worker summary of worker summary of what WID would be the one kind of, like representing that work. This is, this would be the source key of source key. So we'll discuss later that ok otherwise we'll get confused now, ok? So just try to try to work on this one.

Hidau, Rahul
21:56
Okay. Okay ok ok.

Vandanasetti, Venkatesh
21:58
Okay and if still we need something like this one, e.g., this is the element, but what we do is you keep as a json object only, ok? We wanted to bring some more things inside this one, right? You said right like static value serial number.

Vandanasetti, Venkatesh
22:16
Values those things, hardcoded values. So we bring those structures inside this one.

Vandanasetti, Venkatesh
22:23
Okay, ok.

Hidau, Rahul
22:26
Okay.

Vandanasetti, Venkatesh
22:30
So what about remaining things?

Hidau, Rahul
22:32
Yeah we have to left currently.

Vandanasetti, Venkatesh
22:39
We will not worry about namespacing. So e.g. it is the not this one, this one, this one, these kind of things you will not consider.

Vandanasetti, Venkatesh
22:52
Okay, we'll skip, we'll skip those things.

Vandanasetti, Venkatesh
22:58
So this one you might ask this one also, right? There you sorry so only we'll consider this worker summary the While processing, we'll split this one and we'll only take 2nd part.

Hidau, Rahul
23:18
Okay.

Vandanasetti, Venkatesh
23:20
Okay, ok.

Hidau, Rahul
23:22
Got it right? Yeah, I got it, got it.

Vandanasetti, Venkatesh
23:26
So any questions right guys feel free to ask.

Boddu, Srikanth
23:31
Okay, what are the enums we're discussing those are like those tags are those ones like he's added, he's updated.

Vandanasetti, Venkatesh
23:39
Those are the ones we No, NO NO NO enums means constant values, e.g., if something has to send, right? So that has to be fixed between either one or two values. I think we have some numbers.

Vandanasetti, Venkatesh
23:53
Yeah. And for that configuration, for that source key, those are constants you are saying those will be.

Vandanasetti, Venkatesh
24:12
I'll show the. Thanks.

Vandanasetti, Venkatesh
25:08
Otherwise we'll accept range like a zero to 01:20. Meaning inclusive.

Boddu, Srikanth
25:15
Okay these are you know constants I mean for that signature.

Vandanasetti, Venkatesh
25:19
Then it's a constant. So those things. So these things will define as a.

Boddu, Srikanth
25:26
Violations.

Vandanasetti, Venkatesh
25:27
Okay, got it. So we'll not consider this thing, we will simply pick this value that should water value you are getting at the runtime rate? Okay. So we'll pick that one. Even this range also, e.g., if I want to configure this one, I will mean.

Boddu, Srikanth
25:40
In mean value maxim.

Vandanasetti, Venkatesh
25:44
Discovering it this one is discovering. So like this we will look even it is a regular.

Boddu, Srikanth
25:49
Exception will use our regular exceptions so we'll utilize those whatever that ok.

Vandanasetti, Venkatesh
26:02
Fine right? Any questions anything again it is coming. Like.

Vandanasetti, Venkatesh
26:17
Okay.

Vandanasetti, Venkatesh
26:29
So this is the one we have to go through work through.

____________________________________________________________________________________________________________________

Step1:
XSD will upload from UI
- API capabilty to upload file

Process XSD
- Once we receive file from above API
- process the XSD
- extract all field structures
{
    "Workers_Effective_Stack": {
        "Summary": {
            "Integration_Event": {}
"Integration_Sent_On": {}
        },
        "worker": {
            "Worker_Summary": {},
            "Effective_Change": {}
        },
"E.......
...
    }
}

