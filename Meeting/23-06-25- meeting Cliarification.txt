
Vandanasetti, Venkatesh
0:04
So otherwise that is let me let me share my screen too. Okay.

Boddu, Srikanth
0:17
Okay.

Vandanasetti, Venkatesh
0:19
So you guys were able to see my screen, right?

Hidau, Rahul
0:23
Yes yes, it's visible.

Vandanasetti, Venkatesh
0:26
So fine, ok. Now we are going to discuss new XML, right? XML feature.

Hidau, Rahul
0:30
Yes.

Vandanasetti, Venkatesh
0:32
So what is the step one we have is the step one will have access D access D will upload from UI.

Vandanasetti, Venkatesh
0:45
So to upload this UA, upload to access the from what we need to give capability we need to give provider API capability to upload a file.

Hidau, Rahul
0:56
Yes.

Vandanasetti, Venkatesh
0:57
Yes?

Hidau, Rahul
0:59
Yes perfect.

Vandanasetti, Venkatesh
1:00
So next point is upload once we have already upload the Sorry. Okay, next question is processed.

Vandanasetti, Venkatesh
1:17
Yes, so once you got like once we receive file from the APA receive file.

Hidau, Rahul
1:29
It's from the UI.

Vandanasetti, Venkatesh
1:31
From my. Okay from.

Boddu, Srikanth
1:39
You.

Vandanasetti, Venkatesh
1:40
Okay, it will be any place. So you need to process the SSD. Process the.

Hidau, Rahul
1:50
So what are the steps in the process of SSD?

Vandanasetti, Venkatesh
1:53
So extract all like a structure, field structures.

Hidau, Rahul
2:00
Yes.

Boddu, Srikanth
2:05
Okay.

Vandanasetti, Venkatesh
2:07
All the means like let us take example of this.

Boddu, Srikanth
2:16
Okay.

Vandanasetti, Venkatesh
2:22
So, so let's take example of this ok? So what will happen? This starts with the worker stack summary, worker stack.

Hidau, Rahul
2:34
Yeah, so how how it will be what'.

Vandanasetti, Venkatesh
2:38
Will open and close, so this would be the root element ok?

Hidau, Rahul
2:47
Okay, ok.

Vandanasetti, Venkatesh
2:50
So again it will open like this. So once after this one how we are going to give you like what is the response we are going to construct? So we got this. After that, what is the next element it is having? You need to understand like complex.

Vandanasetti, Venkatesh
3:10
Otherwise they can have like simple like access to understood the element. Element is having some like summary of like inline variables are a summary of referring object like one.

Vandanasetti, Venkatesh
3:31
This is referring object right? From here to here.

Hidau, Rahul
3:34
Yeah.

Vandanasetti, Venkatesh
3:36
As this part or how it is with me, the worker type is a reference of some other complex type. But whereas some this part summary part, the element is the complex this means they have defined here itself for that element. What what are the attributes for the summary? Understood?

Hidau, Rahul
3:53
Yeah, yeah, understood, understood.

Boddu, Srikanth
3:55
So next next element is our element is summary.

Vandanasetti, Venkatesh
4:01
So a summary how how how we are going to different summary here is like this, ok? Okay ok so like this we'll have summary attributes, like this one, right? Yes.

Hidau, Rahul
4:18
Application events.

Vandanasetti, Venkatesh
4:25
Ticket, so what we are going to do here is we are going to capture all those ok ok so then after this again, next is our our thinking is like this one, like next complex step is worker.

Vandanasetti, Venkatesh
4:51
So worker is type of worker type basically. 2nd element would be.

Hidau, Rahul
5:03
Why could I?

Vandanasetti, Venkatesh
5:06
No, we'll open again, we'll. Okay, we'll open. So again worker will have attribute set.

Hidau, Rahul
5:13
Yes yes. So this is the worker sum.

Vandanasetti, Venkatesh
5:16
Three worker type and this is the one this is a so again worker will have worker type like worker type is have will have that worker summary and effect to change. If I'll open workers worker here again I'll have sub attributes of worker summary Effect to change date, the effect to change this order changes we have.

Boddu, Srikanth
5:46
Okay.

Vandanasetti, Venkatesh
5:48
So this one, that's Understood right now.

Hidau, Rahul
5:50
Yeah mr.

Vandanasetti, Venkatesh
5:54
Okay.

Hidau, Rahul
5:55
Yeah, now it's it's continuing yeah now it's continuing as per our.

Vandanasetti, Venkatesh
6:03
So once you generate this one, if you if you reply back it is new way, so what will how you guys want to display is this is a root element they'll display. So inside that they'll display like the expandable chains.

Vandanasetti, Venkatesh
6:18
So whatever I show you that image rate.

Hidau, Rahul
6:22
Yes yes.

Vandanasetti, Venkatesh
6:25
Jason, what, what is the name of that Jason yesterday? I'll tell you.

Boddu, Srikanth
6:42
Okay.

Vandanasetti, Venkatesh
7:09
1 s let me.

Hidau, Rahul
7:14
And one more thing is like as per our previous discussion as well, so when we are generating the template after user selecting should be like templating indicate only.

Hidau, Rahul
7:31
The structure element or attribute name or the should it also pre populated pre populate any default value defined in the access d or the XML e.g. like in the last XML you were you have seen seeing the and the default value is the like that.

Vandanasetti, Venkatesh
7:53
We're not going to going with the default value say NO.

Vandanasetti, Venkatesh
7:58
Okay, because whatever data they are going to provide us, ok? So you're sayings enums. Hello?

Hidau, Rahul
8:08
Okay ok yeah yeah got it got it.

Vandanasetti, Venkatesh
8:12
So those things everything will give you we are going to capture in validation rules, ok? E.g., we have a constantly enum constant. It has to accept only three values, ABC assumption. So what we'll do in the validation rules will define that field either or BC. So then it is it is reflecting your enum, right?

Hidau, Rahul
8:34
Yes yes yes.

Vandanasetti, Venkatesh
8:36
So everything will consider this see if you are asking seriously, we might, what is the type of, we might mention that type of the data also yes?

Hidau, Rahul
8:46
Yeah.

Vandanasetti, Venkatesh
8:49
But NO need because while processing as input for us, we are assuming everything is a string, ok?

Hidau, Rahul
8:54
Okay.

Vandanasetti, Venkatesh
8:56
So that's why if while processing also, you NO need to rely on these types like what is the type of each element? E.g., if I open any simple types sorry.

Hidau, Rahul
9:14
Type yes yes. So you.

Vandanasetti, Venkatesh
9:17
You don't need to rely on this type because we are always considering everything as a string. When you say date also because date will have format, right? That format we are going to configure at validations level.

Hidau, Rahul
9:28
Okay.

Hidau, Rahul
9:32
Understood, right? Yeah, yeah, understood. And one more question is here like when.

Vandanasetti, Venkatesh
9:37
Okay.

Hidau, Rahul
9:38
Yeah, please.

Vandanasetti, Venkatesh
9:41
No, NO, i'm waiting for.

Hidau, Rahul
9:43
Yeah, so when displaying the XML structure in the preview ok so should attributes like keep going and employee IDs like if a parent selectable node like alongside the.

Vandanasetti, Venkatesh
10:01
Yes yes yeah it will be like e.g., your question like e.g. this is the element where it is having some attributes assumption. I'll show this example of where is that this one I'll try to open this one. Assumption there is NO type ah This one you are saying?

Vandanasetti, Venkatesh
10:31
No, they're not this one.

Boddu, Srikanth
10:40
Okay.

Vandanasetti, Venkatesh
10:43
Yeah.

Hidau, Rahul
10:48
Okay, Venky what we probably explained getting into some.

Vandanasetti, Venkatesh
10:54
I'll try to explain you that one. E.g., your access the access the e.g. this one is your employees, ok? So you your your question is while writing employee.

Hidau, Rahul
11:16
Okay.

Vandanasetti, Venkatesh
11:22
So if we have ID, employee ID, ok? Yeah as an attribute.

Hidau, Rahul
11:30
Yeah, so my question is when displaying displaying the XML structure in the preview, so should attribute like people and numeral employee ID appears in the selectable note alongside element or should be based on the differently? This is my question like NO NO NO.

Vandanasetti, Venkatesh
11:56
This is the employee ID, this is the name. It will represent as a attribute, right? Yeah.

Hidau, Rahul
12:05
You you can go, you can go in there yeah yeah so you can go in the question.TXP file just previous one, new one yeah question Yes. So here I have mentioned this example as well.

Vandanasetti, Venkatesh
12:20
Yeah. This one?

Hidau, Rahul
12:24
I.

Vandanasetti, Venkatesh
12:25
Question and questioning question.

Vandanasetti, Venkatesh
12:35
Okay fine. That's what employee attributes having let us take this one only. So employed, so you are saying number.

Hidau, Rahul
12:54
Yeah.

Vandanasetti, Venkatesh
12:59
This one right? Yeah yeah so e.g. this one, how we are going to return is because for us we will not consider the element. So simply we'll put this one like this tag is employee though inside this we will put as a simple variables.

Vandanasetti, Venkatesh
13:26
So they'll take this one. Otherwise they'll.

Hidau, Rahul
13:32
Okay ok.

Vandanasetti, Venkatesh
13:36
So you will have this one number because while processing rate we'll check whether element is having this any attributes or not. Yes, the attributes are there we will the attributes have been configured in our data studio or not. Not configurable, we don't pick, that's simple.

Hidau, Rahul
13:53
Okay, ok, got it.

Vandanasetti, Venkatesh
13:59
Hello.

Hidau, Rahul
13:59
Should try this, this is how it is going to be. Yeah, understood.

Vandanasetti, Venkatesh
14:05
Yeah that's it. So ok.

Boddu, Srikanth
14:19
Okay, if you have a child tag for a name.

Vandanasetti, Venkatesh
14:32
Yeah.

Boddu, Srikanth
14:34
I mean inside name if you have 1st name, last name, something tags like that.

Vandanasetti, Venkatesh
14:39
Yeah.

Boddu, Srikanth
14:41
This one here you're saying name, NO, not attributes, it's like how you wrote inside employees employee door, I'm saying inside name tag itself you have five.

Vandanasetti, Venkatesh
14:51
1st name, last name, something like that. Oh, that also it can be inside his name is, this would be like understood, this would be like F name 1st name or last name some.

Hidau, Rahul
15:04
Questionnaire.

Boddu, Srikanth
15:06
Sorry.

Vandanasetti, Venkatesh
15:07
Will also same or it will come inside.

Boddu, Srikanth
15:10
Open like this ok inside name you'll open the object and then keep the attributes again, ok.

Vandanasetti, Venkatesh
15:17
Will give the attributes. There will be one more scenario, e.g., I'll tell you here. So this is straightforward, ok? Here I have one more field some date, date not DT, ok.

Vandanasetti, Venkatesh
15:35
I'm representing this data as multiple dates, means how it would be joining date, ok? Like this. I can have like this also, right? XML.

Vandanasetti, Venkatesh
15:52
So this simple it's a simple type. It's not a simple type. Representing a simple type, but it is a complex type. So in such cases, these kind of things will not come the one anyway that I'm sure. But still if you wanted to process this one as a.

Vandanasetti, Venkatesh
16:08
Oh, this one, right? Like it has to be represent like this. So this DTF join. Similarly DTF.

Vandanasetti, Venkatesh
16:34
What if this DT DT itself is having value, it is the question here. E.g., it is having some rty, something is there, ok? So how we are going to capture this DT value?

Vandanasetti, Venkatesh
16:47
That is a.

Boddu, Srikanth
16:49
Basically for us.

Vandanasetti, Venkatesh
16:57
Yeah so so for these kind of things, e.g., assumption, either we can represent like this, otherwise this duty inside the duty whatever attributes we have right we can pushing it to this, this level joint kind of thing, ok? Like this also we can represent.

Boddu, Srikanth
17:20
Okay.

Vandanasetti, Venkatesh
17:24
Now simply DT will have this one the value whatever? That's it. So there might be chances of both cases, right, basically.

Vandanasetti, Venkatesh
17:42
Okay.

Hidau, Rahul
17:44
Okay.

Boddu, Srikanth
17:45
Okay, I mean that works if it is a simple object suppose if that is a.

Vandanasetti, Venkatesh
17:51
Okay name is fine inside these attributes. E.g., it is a compress which is definitely it is going to create inside this one. Similarly, this one for this one also if any of these have these kind of things, right?

Vandanasetti, Venkatesh
18:06
Why I'm suggesting here is this object then for such cases or we can bring some kind of dollar value kind of thing which represents this is next level, ok?

Vandanasetti, Venkatesh
18:21
So which which will hold the actual value of this DT. So some representation will bring here, NO issues, ok. So we are at 1st level, right? Basically, 1st level stays, right? So We'll bring like structure like this, NO issues.

Vandanasetti, Venkatesh
18:42
So, for, for timing park this as a side NO issues ok if DT comes we'll assume simply it's an ok? Okay Rahul, next question?

Hidau, Rahul
18:59
Second one this one? No, NO, second one is not I got 2nd one and the 3rd 3rd one is.

Vandanasetti, Venkatesh
19:09
So each selected node element or correct? For selected element like what should be the storage column relation table? Should it be typed yeah here in.

Vandanasetti, Venkatesh
19:34
Insico Inseco. See, we have, if I say in the column relations we have concept of source key. So the source key this one. So source key is fields will be this one.

Hidau, Rahul
19:51
Okay.

Vandanasetti, Venkatesh
19:55
So if I'm going with structure, this structure, e.g., if I open this one, this summary would be the source key, summary fields. Worker would be the source key, worker fields. Worker summary would be the source key, worker summary fields.

Hidau, Rahul
20:17
Okay, ok. Got it from where you got it.

Boddu, Srikanth
20:24
Example is it from XSD or XML from where you took that example or you wrote on your own? In that question you wrote something, right? That structure.

Hidau, Rahul
20:35
No, NO, when can you provided one of the XML in the.

Boddu, Srikanth
20:39
Yeah ok ok ok.

Vandanasetti, Venkatesh
20:48
So the creation of this one, right? Column relations rate.

Vandanasetti, Venkatesh
20:54
Will be next step of the, this one, once we get, We are given the structure to them, ok? So they'll select some fields and some structures and they'll send it to us. So once after the selection thing, right, we are going to create a, like next, like collaboration structures.

Hidau, Rahul
21:11
Okay, ok.

Vandanasetti, Venkatesh
21:15
Yeah, let's just focus on.

Hidau, Rahul
21:20
On this one, ok. Okay ok.

Vandanasetti, Venkatesh
21:24
Sub one sub two these two focus on these two. Once this is done, when we are replaying back to API rate this API replaying replying red we are replaying rate. So then we'll discuss how to how we are going to create a collaborations. Why? Because while creating collaborations I need to like.

Vandanasetti, Venkatesh
21:39
Worker summary of worker summary of what WID would be the one kind of, like representing that work. This is, this would be the source key of source key. So we'll discuss later that ok otherwise we'll get confused now, ok? So just try to try to work on this one.

Hidau, Rahul
21:56
Okay. Okay ok ok.

Vandanasetti, Venkatesh
21:58
Okay and if still we need something like this one, e.g., this is the element, but what we do is you keep as a json object only, ok? We wanted to bring some more things inside this one, right? You said right like static value serial number.

Vandanasetti, Venkatesh
22:16
Values those things, hardcoded values. So we bring those structures inside this one.

Vandanasetti, Venkatesh
22:23
Okay, ok.

Hidau, Rahul
22:26
Okay.

Vandanasetti, Venkatesh
22:30
So what about remaining things?

Hidau, Rahul
22:32
Yeah we have to left currently.

Vandanasetti, Venkatesh
22:39
We will not worry about namespacing. So e.g. it is the not this one, this one, this one, these kind of things you will not consider.

Vandanasetti, Venkatesh
22:52
Okay, we'll skip, we'll skip those things.

Vandanasetti, Venkatesh
22:58
So this one you might ask this one also, right? There you sorry so only we'll consider this worker summary the While processing, we'll split this one and we'll only take 2nd part.

Hidau, Rahul
23:18
Okay.

Vandanasetti, Venkatesh
23:20
Okay, ok.

Hidau, Rahul
23:22
Got it right? Yeah, I got it, got it.

Vandanasetti, Venkatesh
23:26
So any questions right guys feel free to ask.

Boddu, Srikanth
23:31
Okay, what are the enums we're discussing those are like those tags are those ones like he's added, he's updated.

Vandanasetti, Venkatesh
23:39
Those are the ones we No, NO NO NO enums means constant values, e.g., if something has to send, right? So that has to be fixed between either one or two values. I think we have some numbers.

Vandanasetti, Venkatesh
23:53
Yeah. And for that configuration, for that source key, those are constants you are saying those will be.

Vandanasetti, Venkatesh
24:12
I'll show the. Thanks.

Vandanasetti, Venkatesh
25:08
Otherwise we'll accept range like a zero to 01:20. Meaning inclusive.

Boddu, Srikanth
25:15
Okay these are you know constants I mean for that signature.

Vandanasetti, Venkatesh
25:19
Then it's a constant. So those things. So these things will define as a.

Boddu, Srikanth
25:26
Violations.

Vandanasetti, Venkatesh
25:27
Okay, got it. So we'll not consider this thing, we will simply pick this value that should water value you are getting at the runtime rate? Okay. So we'll pick that one. Even this range also, e.g., if I want to configure this one, I will mean.

Boddu, Srikanth
25:40
In mean value maxim.

Vandanasetti, Venkatesh
25:44
Discovering it this one is discovering. So like this we will look even it is a regular.

Boddu, Srikanth
25:49
Exception will use our regular exceptions so we'll utilize those whatever that ok.

Vandanasetti, Venkatesh
26:02
Fine right? Any questions anything again it is coming. Like.

Vandanasetti, Venkatesh
26:17
Okay.

Vandanasetti, Venkatesh
26:29
So this is the one we have to go through work through.

____________________________________________________________
6/23/2025 1:05 PM • <Employees>
<EMPLEADO TIPO="1001", NUMRO="dfsd">
<Name>
<FName></FName> 
</Name>
<DT join="", dob="">rty<DT>
</EMPLEADO>
</Employees>


{
"Employees": [
"EMPLEADO": {
"TIPO": null,
"NUMRO" : null,
"Name" : {
"FName" : null,
},
"join": null,
"dob": null
"DT": null,
"DT": {
"$$$Value$$$": null
"join": null,
"dob": null
}
}
]

}
____________________________________________________________

Vandanasetti, Venkatesh 6/23/2025 1:04 PM • XML Feature

Step1:
XSD will upload from UI
- API capabilty to upload file

Process XSD
- Once we receive file from above API
- process the XSD
- extract all field structures
{
"Workers_Effective_Stack" : {
"Summary": {
"Integration_Event": {}
"Integration_Sent_On": {}
},
"worker" : {
"Worker_Summary": {

},
"Effective_Change" : {

}
},
"E

}

}

